/**
 * lytesnap-backend-api
 * This document details all the API endpoints that are consumed exclusively by lytesnap frontend.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ylin@lytesnap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FilterSpecialties model module.
 * @module model/FilterSpecialties
 * @version 1.0.12
 */
class FilterSpecialties {
    /**
     * Constructs a new <code>FilterSpecialties</code>.
     * @alias module:model/FilterSpecialties
     */
    constructor() { 
        
        FilterSpecialties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterSpecialties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterSpecialties} obj Optional instance to populate.
     * @return {module:model/FilterSpecialties} The populated <code>FilterSpecialties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterSpecialties();

            if (data.hasOwnProperty('skillLevel')) {
                obj['skillLevel'] = ApiClient.convertToType(data['skillLevel'], ['String']);
            }
            if (data.hasOwnProperty('ageRange')) {
                obj['ageRange'] = ApiClient.convertToType(data['ageRange'], ['String']);
            }
        }
        return obj;
    }


}

/**
 * @member {Array.<module:model/FilterSpecialties.SkillLevelEnum>} skillLevel
 */
FilterSpecialties.prototype['skillLevel'] = undefined;

/**
 * @member {Array.<module:model/FilterSpecialties.AgeRangeEnum>} ageRange
 */
FilterSpecialties.prototype['ageRange'] = undefined;





/**
 * Allowed values for the <code>skillLevel</code> property.
 * @enum {String}
 * @readonly
 */
FilterSpecialties['SkillLevelEnum'] = {

    /**
     * value: "Beginner"
     * @const
     */
    "Beginner": "Beginner",

    /**
     * value: "Intermediate"
     * @const
     */
    "Intermediate": "Intermediate",

    /**
     * value: "Competitive"
     * @const
     */
    "Competitive": "Competitive",

    /**
     * value: "Advanced"
     * @const
     */
    "Advanced": "Advanced"
};


/**
 * Allowed values for the <code>ageRange</code> property.
 * @enum {String}
 * @readonly
 */
FilterSpecialties['AgeRangeEnum'] = {

    /**
     * value: "Kids"
     * @const
     */
    "Kids": "Kids",

    /**
     * value: "Juniors"
     * @const
     */
    "Juniors": "Juniors",

    /**
     * value: "Adults"
     * @const
     */
    "Adults": "Adults",

    /**
     * value: "Seniors"
     * @const
     */
    "Seniors": "Seniors"
};



export default FilterSpecialties;

