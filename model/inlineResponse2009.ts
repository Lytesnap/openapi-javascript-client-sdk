/**
 * lytesnap-backend-api
 * This document details all the API endpoints that are consumed exclusively by lytesnap frontend.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: ylin@lytesnap.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

export class InlineResponse2009 {
    'userId'?: string;
    'userType'?: InlineResponse2009.UserTypeEnum;
    'userName'?: string;
    'userPhoto'?: string;
    'date'?: string;
    'reason'?: InlineResponse2009.ReasonEnum;
    'rating'?: number;
    'status'?: InlineResponse2009.StatusEnum;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "userId",
            "baseName": "userId",
            "type": "string"
        },
        {
            "name": "userType",
            "baseName": "userType",
            "type": "InlineResponse2009.UserTypeEnum"
        },
        {
            "name": "userName",
            "baseName": "userName",
            "type": "string"
        },
        {
            "name": "userPhoto",
            "baseName": "userPhoto",
            "type": "string"
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "string"
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "InlineResponse2009.ReasonEnum"
        },
        {
            "name": "rating",
            "baseName": "rating",
            "type": "number"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "InlineResponse2009.StatusEnum"
        }    ];

    static getAttributeTypeMap() {
        return InlineResponse2009.attributeTypeMap;
    }
}

export namespace InlineResponse2009 {
    export enum UserTypeEnum {
        Student = <any> 'Student',
        Coach = <any> 'Coach'
    }
    export enum ReasonEnum {
        MedicalEmergency = <any> 'Medical emergency',
        Weather = <any> 'Weather',
        Unspecified = <any> 'Unspecified',
        Other = <any> 'Other'
    }
    export enum StatusEnum {
        Pending = <any> 'pending',
        Solved = <any> 'solved'
    }
}
